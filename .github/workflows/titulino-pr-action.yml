name: publish to gc buckets

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:
    inputs:
      env:
        description: "Environment"
        required: true
        default: "dev"
        type: choice
        options:
          - dev
          - prod

env:
  DEV_DOMAIN_NAME: dev.titulino.com
  PROD_DOMAIN_NAME: titulino.com
  CACHE_BUCKET_NAME: github-actions-cache-162166941288
  GIT_TOKEN: ${{ secrets.TITULINO_GITHUB_TOKEN  }}
  ENV: ${{ github.ref == 'refs/heads/master' && 'prod' || 'dev' }}
  ENV_INPUT: ${{ inputs.env }}
  CI: false
  NODE_OPTIONS: "--max_old_space_size=8112"
  GCP_PROJECT_ID: your-google-cloud-project-id
  GCP_BUCKET_NAME: ${{ github.ref == 'refs/heads/master' && 'gs://titulino.com' || 'gs://dev.titulino.com' }}
  GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }} # Add this secret in your GitHub repo

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18.10.0
      - name: Install Google Cloud SDK
        run: |
          curl https://sdk.cloud.google.com | bash
          source $HOME/google-cloud-sdk/path.bash.inc
      - name: Authenticate with Google Cloud
        run: |
          echo '${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}' | base64 --decode > gcp-key.json
          gcloud auth activate-service-account --key-file=gcp-key.json
          gcloud config set project $GCP_PROJECT_ID
      - name: Cache npm modules
        id: npm-cache
        run: |
          # Check if the cache exists in GCS
          if gsutil -q stat gs://${CACHE_BUCKET_NAME}/cip/npm_cache.tgz; then
            echo "Cache found. Restoring from GCS..."
            gsutil cp gs://${CACHE_BUCKET_NAME}/cip/npm_cache.tgz npm_cache.tgz
            tar -xzf npm_cache.tgz
          fi
      - name: Upload to GCS
        run: |
          echo "npm version --> $(npm -v)"
          echo "node version --> $(node -v)"
          [ -n "${ENV_INPUT}" ] && export ENV=${ENV_INPUT}
          echo "ENV--> ${ENV} ENV_INPUT--> ${ENV_INPUT}"
          export ENVIROMENT=${ENV}
          sed -i "s/process.env.ENVIROMENT/\"${ENV}\";/" src/configs/EnvironmentConfig.js
          echo "Setting environment sp
