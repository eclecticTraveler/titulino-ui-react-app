name: publish to gc buckets

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:
    inputs:
      env:
        description: "Environment"
        required: true
        default: "dev"
        type: choice
        options:
          - dev
          - prod

env:
  DEV_DOMAIN_NAME: dev.titulino.com
  PROD_DOMAIN_NAME: titulino.com
  CACHE_BUCKET_NAME: github-actions-cache-162166941288
  GIT_TOKEN: ${{ secrets.TITULINO_GITHUB_TOKEN }}
  ENV: ${{ github.ref == 'refs/heads/master' && 'prod' || 'dev' }}
  ENV_INPUT: ${{ inputs.env }}
  CI: false
  NODE_OPTIONS: "--max_old_space_size=4096"
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_BUCKET_NAME: ${{ github.ref == 'refs/heads/master' && 'titulino.com' || 'dev.titulino.com' }}

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout Code
        uses: actions/checkout@v4

      # Set up Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.13.1

      # Authenticate with Google Cloud using service account key
      - name: Authenticate with GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      # Install Google Cloud SDK
      - name: Setup Google Cloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}


      # Cache npm modules
      - name: Cache npm modules
        id: npm-cache
        run: |
          if gsutil -q stat gs://${CACHE_BUCKET_NAME}/cip/npm_cache.tgz; then
            echo "Cache found. Restoring from GCS..."
            gsutil cp gs://${CACHE_BUCKET_NAME}/cip/npm_cache.tgz npm_cache.tgz
            tar -xzf npm_cache.tgz
          fi

      # Install dependencies
      - name: Install dependencies
        run: npm install

      # Build React app
      - name: Build React App
        run: npm run build

      # Upload to GCS
      - name: Upload to GCS
        run: |
          echo "npm version --> $(npm -v)"
          echo "node version --> $(node -v)"
          [ -n "${ENV_INPUT}" ] && export ENV=${ENV_INPUT}
          echo "ENV--> ${ENV} ENV_INPUT--> ${ENV_INPUT}"
          export ENVIRONMENT=${ENV}
          sed -i "s/process.env.ENVIRONMENT/\"${ENV}\";/" src/configs/EnvironmentConfig.js

          # Remove all files in the bucket before syncing
          gsutil -m rm -r gs://${GCP_BUCKET_NAME}/*

          # Sync new build to the bucket
          gsutil -m rsync -r build gs://${GCP_BUCKET_NAME}
